name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --dev
        uv pip install -e .[dev]

    - name: Lint with ruff
      run: |
        uv run ruff check .

    - name: Format check with black
      run: |
        uv run black --check .

    - name: Type check with mypy
      run: |
        uv run mypy src/

    - name: Test with pytest
      run: |
        uv run pytest --cov=devcontainer_tools --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Set up Python
      run: uv python install 3.11

    - name: Install devcontainer CLI
      run: npm install -g @devcontainers/cli

    - name: Install package
      run: |
        uv sync --dev
        uv pip install -e .

    - name: Test CLI commands
      run: |
        uv run dev --version
        uv run dev --help
        uv run dev init --common-config test-common.json
        cat test-common.json

    - name: Test config merge (without Docker)
      run: |
        # Create test configs
        mkdir -p .devcontainer
        echo '{"name": "test", "forwardPorts": [8000]}' > .devcontainer/devcontainer.json
        
        # Test merge functionality (dry run)
        uv run dev up --debug --workspace . || true  # Allow failure since Docker isn't available