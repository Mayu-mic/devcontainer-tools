[project]
name = "devcontainer-tools"
version = "0.0.1"
description = "Simplified DevContainer management tool for teams"
authors = [{name = "Ryo Koizumi", email = "koizumiryo@gmail.com"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["devcontainer", "docker", "development", "container", "vscode"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: System :: Software Distribution",
]

dependencies = [
    "click>=8.1.0",
    "rich>=13.0.0",
    "json5>=0.9.0",
]

[project.urls]
Homepage = "https://github.com/Mayu-mic/devcontainer-tools"
Documentation = "https://github.com/Mayu-mic/devcontainer-tools#readme"
Repository = "https://github.com/Mayu-mic/devcontainer-tools.git"
Issues = "https://github.com/Mayu-mic/devcontainer-tools/issues"

[project.scripts]
dev = "devcontainer_tools.cli:cli"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/devcontainer_tools"]

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # allow asserts in tests


[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=devcontainer_tools",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v",
]

[tool.coverage.run]
source = ["src/devcontainer_tools"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.12.0",
]
